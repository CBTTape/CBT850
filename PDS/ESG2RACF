//ESG2RAKF JOB
//* ------------------------------------------------------------------*
//* Update the ESG Security System from CBT file 165 to RAKF 1.2.0    *
//* ------------------------------------------------------------------*
//*
//* ------------------------------------------------------------------*
//* Copy ESG members being reused by RAKF unmodified                  *
//* ------------------------------------------------------------------*
//ESGCOPY  EXEC PGM=IEBCOPY
//ESG      DD  DISP=SHR,DSN=MVS.RAKF.ESG2RAKF.CBT.F165
//RAKF     DD  DISP=(,CATLG),DSN=MVS.RAKF.ESG2RAKF.SRC,
//             UNIT=3390,DCB=(RECFM=FB,LRECL=80,BLKSIZE=5600),
//             SPACE=(TRK,(5,2,3))
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 COPY INDD=((ESG,R)),OUTDD=RAKF
 SELECT MEMBER=($$$$$DOC,$$COPYRT,$$NOTICE,                            X
                CJYPCBLK,CJYRCVTD,CJYUCBLK)
/*
//* ------------------------------------------------------------------*
//* Update ESG members being reused by RAKF with modifications        *
//* ------------------------------------------------------------------*
//ESGUPDTE EXEC PGM=IEBUPDTE,PARM=MOD
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD DISP=SHR,DSN=MVS.RAKF.ESG2RAKF.CBT.F165
//SYSUT2   DD DISP=OLD,DSN=MVS.RAKF.ESG2RAKF.SRC
//SYSIN    DD *
./  CHANGE NAME=CJYRCVT
./ DELETE  SEQ1=00060014,SEQ2=00060014
./ DELETE  SEQ1=00160014,SEQ2=00160014
         GETMAIN RU,LV=GMLEN,SP=245 GET SQA
./ DELETE  SEQ1=00250001,SEQ2=00280001
         MVI   RCVTVERS,X'06'      V1R7 OF RACF
         MVI   RCVTFLG1,RCVTTAPE TAPE
         MVI   RCVTSTA1,X'FF'
         MVI   RCVTAUOP,X'7A'
./ DELETE  SEQ1=00440001,SEQ2=00440001
         WTO   'RCVT WAS PROCESSED SUCCESSFULLY'
./ DELETE  SEQ1=00500010,SEQ2=00500010
CJYRCVTX DC    XL8'0'
./ DELETE  SEQ1=00950001,SEQ2=00950001
         IHAPSA  DSECT=YES
./  CHANGE NAME=CJYRPROF
         MACRO
&LABEL   BASMAC &R1,&S2
&LABEL.  DC    0XL4'00',X'4D',AL.4(&R1.,0),S(&S2.)
         MEND
./ DELETE  SEQ1=00400001,SEQ2=00400001
         MODESET MODE=SUP,KEY=ZERO     authorize ourselves
./ DELETE  SEQ1=01410001,SEQ2=01410001
         BASMAC R14,MORERPE            START TO FREE RPE'S
./ DELETE  SEQ1=01440001,SEQ2=01440001
         MODESET MODE=PROB,KEY=NZERO   return to problem state
./ DELETE  SEQ1=01460001,SEQ2=01460001
         WTO   'RAKFPROF7  RAKF PROFILES UPDATED'
./ DELETE  SEQ1=01640001,SEQ2=01640001
         BR    R14                     RETURN TO END RUN
./ DELETE  SEQ1=01670001,SEQ2=01680001
         WTO   'RAKFPROF1  RCVT NOT PROPERLY INITIALIZED'
         WTO   'RAKFPROF1  **  PROGRAM TERMINATED  **'
./ DELETE  SEQ1=01720001,SEQ2=01730001
         WTO   'RAKFPROF2  NO RECORDS INPUT FROM CJYPDATA'
         WTO   'RAKFPROF2  **  PROGRAM TERMINATED  **'
./ DELETE  SEQ1=01780001,SEQ2=01810001
         BASMAC R14,MORERPE            GO CLEANUP AND RETURN HERE
         BASMAC R14,BADMSG             WRITE BADMSG
         WTO   'RAKFPROF3  I/P RECORDS OUT OF ORDER'
         WTO   'RAKFPROF3  **  PROGRAM TERMINATED  **'
./ DELETE  SEQ1=01860001,SEQ2=01880001
         BASMAC R14,MORERPE            GO CLEANUP AND RETURN HERE
         BASMAC R14,BADMSG             WRITE BADMSG
         WTO   'RAKFPROF4  PERMIT RECORD WITHOUT UNIVERSAL ACCESS RECOR*
./ DELETE  SEQ1=01900001,SEQ2=01900001
         WTO   'RAKFPROF4  **  PROGRAM TERMINATED  **'
./ DELETE  SEQ1=01950001,SEQ2=01980001
         BASMAC R14,MORERPE            GO CLEANUP AND RETURN HERE
         BASMAC R14,BADMSG             WRITE BADMSG
         WTO   'RAKFPROF5  PERMIT RECORD WITHOUT GROUPID/USERID'
         WTO   'RAKFPROF5  **  PROGRAM TERMINATED  **'
./ DELETE  SEQ1=02030001,SEQ2=02060001
         BASMAC R14,MORERPE            GO CLEANUP AND RETURN HERE
         BASMAC R14,BADMSG             WRITE BADMSG
         WTO   'RAKFPROF6  ENTITY RECORD WITH NO ACCESS AUTHORITY'
         WTO   'RAKFPROF6  **  PROGRAM TERMINATED  **'
./ DELETE  SEQ1=02110001,SEQ2=02110001
BADMSGN  WTO   'RAKFPROF8                                              X
./ DELETE  SEQ1=02130001,SEQ2=02130001
         BR    R14
./ DELETE  SEQ1=02440001,SEQ2=02440001
CJYPDATA DCB   MACRF=GM,EODAD=EOFILE,DDNAME=RAKFPROF,DSORG=PS
./  CHANGE NAME=CJYRUIDS
./ DELETE  SEQ1=00390000,SEQ2=00390000
         MODESET MODE=SUP,KEY=ZERO  authorize ourselves
./ DELETE  SEQ1=01340005,SEQ2=01340005
BYEBYE   MODESET MODE=PROB,KEY=NZERO   return to problem state
         CLOSE (CJYUDATA)              close input dataset
         WTO    'RAKFUIDS4  USER TABLE UPDATED'
./ DELETE  SEQ1=01380005,SEQ2=01390005
ABEND100 WTO    'RAKFUIDS1  RCVT NOT PROPERLY INITIALIZED',DESC=(2)
         WTO    'RAKFUIDSX  ** PROGRAM TERMINATED **',DESC=(2)
./ DELETE  SEQ1=01420005,SEQ2=01420005
ABEND2   WTO    'RAKFUIDS2  INPUT DATA INVALID OR OUT OF SEQ.',DESC=(2)
./ DELETE  SEQ1=01470005,SEQ2=01470005
         WTO    'RAKFUIDSX  ** PROGRAM TERMINATED **',DESC=(2)
./ DELETE  SEQ1=01540005,SEQ2=01550005
ABEND300 WTO    'RAKFUIDS3  EMPTY INPUT FILE ?!?!',DESC=(2)
         WTO    'RAKFUIDSX  ** PROGRAM TERMINATED **',DESC=(2)
./ DELETE  SEQ1=01640001,SEQ2=01640001
CJYUDATA DCB    DDNAME=RAKFUSER,MACRF=GM,EODAD=ENDDATA,DSORG=PS
./ DELETE  SEQ1=02090000,SEQ2=02090000
         IHAPSA  DSECT=YES
./  CHANGE NAME=ICHRTX00
./ DELETE  SEQ1=00010060,SEQ2=00020098
ICHSFR00 TITLE 'SAF ROUTER - ENTRY FOR ALL SECURITY CALLS'
* CPARM='XREF(SHORT),RENT,OBJ,NODECK',LPARM='RENT,REUS,MAP'   ICHSFR00
./ DELETE  SEQ1=00070060,SEQ2=00070060
ICHSFR00 CSECT
./ DELETE  SEQ1=00240060,SEQ2=00250060
./ DELETE  SEQ1=00270060,SEQ2=00280060
         USING ICHSFR00,R15
         SAVE  (14,12),,ICHSFR00.&SYSDATE..&SYSTIME
./ DELETE  SEQ1=00350060,SEQ2=00350060
         USING ICHSFR00,R12        PROGRAM BASE
./ DELETE  SEQ1=00390060,SEQ2=00390060
         L     R9,24(R1)           ADDRESS EXIT WORK AREA
./ DELETE  SEQ1=00490068,SEQ2=00490068
STRTROUT LR    R9,R1               GET ADDR. OF SAF PARAMETER LIST
./ DELETE  SEQ1=00740060,SEQ2=00780060
./ DELETE  SEQ1=00810060,SEQ2=00810060
         BNZ   RACHCLNE            found --> continue
         LA    R2,RACDDSNC         use our DSN CLASS
RACHCLNE XR    ENTYREG,ENTYREG     CLEAR ENTYREG
*        BNZ   RACHACEE            found --> continue
*        B     RACHGOOD            not found --> exit
*        BNZ   RACHNBLK            not zero --> continue
*        B     RACHGOOD            zero --> exit
./ DELETE  SEQ1=00880060,SEQ2=00880060
         CLC   WORKCLAS(8),=CL8' ' CLASS blank?
         BNE   RACHNBLK               --> no, continue
         MVC   WORKCLAS,=CL8'DATASET' --> yes, assume DATASET
RACHNBLK ICM   ACEEREG,B'1111',ACHKACEE POINT TO ACEE
./ DELETE  SEQ1=00900060,SEQ2=00920060
./ DELETE  SEQ1=01320060,SEQ2=01340060
./ DELETE  SEQ1=01690083,SEQ2=01690083
RACDNDEL ICM   R2,B'0111',RDDFCLNW CLASS ???
./ DELETE  SEQ1=01730060,SEQ2=01750060
./ DELETE  SEQ1=01820060,SEQ2=01850060
         CLC   WORKCLAS(8),=CL8' ' CLASS blank?
         BNE   RACDNBLK               --> no, continue
         MVC   WORKCLAS,=CL8'DATASET' --> yes, assume DATASET
RACDNBLK ICM   ACEEREG,B'1111',RDDFACEE POINT TO ACEE
         BNZ   RACDCHCK            GO CHECK
./ DELETE  SEQ1=01860060,SEQ2=01860060
./ DELETE  SEQ1=02120060,SEQ2=02220060
RACDCK18 EQU   *
./ DELETE  SEQ1=02240060,SEQ2=02290060
RACDCMCL EQU   *
./ DELETE  SEQ1=02310083,SEQ2=02320060
./ DELETE  SEQ1=02350060,SEQ2=02390083
         BO    RACDFAIL            BYPASS RC=4
./ DELETE  SEQ1=02450083,SEQ2=02450083
         BO    RACDGDD0            --> Yes, RC=0
./ DELETE  SEQ1=02470083,SEQ2=02480083
         BNO   RACDGDD0            --> No, RC=0
         MVC   SAFPRREA,=F'04'     --> Yes, RC=0 & Reason=4
./ DELETE  SEQ1=02790075,SEQ2=02810075
./ DELETE  SEQ1=03880060,SEQ2=03900060
         IC    R1,CBLKPWDL         LENGTH OF PSWD IN CORE
         EX    R1,RACICKPW         check password
         BE    RACIPWOK            password is correct
./ DELETE  SEQ1=03920060,SEQ2=03920060
         EX    R1,RACISTPW         check STC password
./ DELETE  SEQ1=03950060,SEQ2=03990079
RACIPWOK EQU   *
RACICHPW EQU   *
RACINCL2 EQU   *
         ICM   R3,15,24(R8)        set new password?
         BZ    RACIACEE            no, go make ACEE
         MVC   WORKPASS,0(R3)      yes, move new password
         XC    WORKPASS+1(8),=C'SECURITY' encrypt
         IC    R1,WORKPASS         length of new password
         EX    R1,RACIRPWD         replace password
         SR    R0,R0               clear R0
         LA    R1,RAKFPWUP         get command address
         SVC   34                  execute S RAKFPWUP command
./ DELETE  SEQ1=04010060,SEQ2=04010060
         B     RACIACEE            go make ACEE
RAKFPWUP DC    X'000E0000'         parameter list for ..
         DC    C'S RAKFPWUP'        .. S RAKFPWUP command
RACIRPWD MVC   CBLKPWDL(1),WORKPASS replace in core password
RACICKPW CLC   CBLKPWDL(1),WORKPASS check password
RACISTPW CLC   STCPASS(1),WORKPASS  check STC password
RACIERR1 MVC   WORKWTO+4(60),WTOMSG1 CJYUSERS INVALID
./ DELETE  SEQ1=04090093,SEQ2=04090093
RACIWTO1 MVC   WORKWTO+5+WTOMSG2U(0),1(R5) MOVE USERID
./ DELETE  SEQ1=04390060,SEQ2=04390060
         OI    ACEEFLG1,ACEERACF+ACEECNTL
./ DELETE  SEQ1=04540060,SEQ2=04540060
         CLI   0(R8),X'34'         check length of RACINIT plist
         BNL   RACIAPPL            -> ge x'34' continue
         B     RACINSTA            -> lt x'34' store ACEE addr in ASXB
./ DELETE  SEQ1=04950060,SEQ2=04960060
RACINSTA EQU   *
./ DELETE  SEQ1=04990060,SEQ2=05000081
./ DELETE  SEQ1=05100060,SEQ2=05130060
RACIDNAC EQU   *
./ DELETE  SEQ1=05170060,SEQ2=05170060
         BNE   RACINTDM            NO, GO DO FREE
./ DELETE  SEQ1=05670060,SEQ2=05700072
RACIINPW MVC   SAFPRRET,=F'08'     invalid or no password entered
         XC    WORKPASS,WORKPASS   clear just in case
         B     RACIFAIL            BRANCH TO FAIL COMMON
./ DELETE  SEQ1=05710060,SEQ2=05710060
./ DELETE  SEQ1=06000060,SEQ2=06000060
         BNO   RACINPWF            no  --> check for WTO suppression
RACINPWF CLC   SAFPRRET,=F'08'     invalid or no password entered?
         BNE   RACIFWTO            no  --> write message
         LTR   R3,R3               yes --> no password entered?
         BZ    RTRNFAIL            yes --> don't write message
./ DELETE  SEQ1=06150068,SEQ2=06150068
RTRNGOOD LA    R15,0               RACF RC=0
./ DELETE  SEQ1=06180068,SEQ2=06180068
RTRNWARN LA    R15,0               RACF RC=4
./ DELETE  SEQ1=06210068,SEQ2=06210068
RTRNFAIL LA    R15,0               RACF RC=8
./ DELETE  SEQ1=06360060,SEQ2=06360060
         CLC   WORKCLAS(8),=CL8' '    CLASS blank?
         BNE   ENTYNBLK                  --> no, continue
         MVC   WORKCLAS(8),=CL8'DATASET' --> yes, assume DATASET
ENTYNBLK CLC   =C'DATASET',WORKCLAS  CHECK FOR OUR OWN DSNS.
         CLC   0(3,ENTYREG),=C'SYS' is it a ..
         BNE   ENTYCLLP              --> no
         CLC   8(2,ENTYREG),=C'.T'            .. temporary ..
         BNE   ENTYCLLP              --> no
         CLC   16(3,ENTYREG),=C'.RA'                         .. dataset
         BNE   ENTYCLLP              --> no, go on
         B     AUTHGOOD              --> yes, go for it
./ DELETE  SEQ1=06940060,SEQ2=06940060
ENTYOPER CLC   =C'DATASET',RPECLASN  DATASET CLASS
./ DELETE  SEQ1=07110060,SEQ2=07110060
         MVC   WORKWTO+4(9),=C'RAKF0006 ' USERID/CLASS
./ DELETE  SEQ1=07190060,SEQ2=07190060
         MVC   WORKWTO+4(9),=C'RAKF0009 ' USERID/CLASS
./ DELETE  SEQ1=07290060,SEQ2=07290060
         MVC   WORKWTO+4(9),=C'RAKF000B ' USERID/CLASS
./ DELETE  SEQ1=07310060,SEQ2=07310060
         B     AUTHGOOD            ALLOW ACCESS
./ DELETE  SEQ1=07390060,SEQ2=07390060
         MVC   WORKWTO+4(9),=C'RAKF000A ' USERID/CLASS
./ DELETE  SEQ1=07740079,SEQ2=07740079
STCPASS  DC    X'08251C06253A1F362D',C'Y'
./ DELETE  SEQ1=07770079,SEQ2=07770079
PRODPASS DC    X'08251C06253A1F362D',C'N'
./ DELETE  SEQ1=07840060,SEQ2=07850060
WTOMSG1  DC    CL60'RAKF0001 USERID TABLE INVALID OR MISSING'
WTOMSG2  DC    C'RAKF0002 STC ACCESS ALLOWED: USER:'
./ DELETE  SEQ1=07880060,SEQ2=07890060
WTOMSG3  DC    C'RAKF0003 RESOURCE TABLE INVALID/MISSING: ALLOWED:'
*        DC    C': USER ALLOWED:'
./ DELETE  SEQ1=07920060,SEQ2=07920060
WTOMSG4  DC    C'RAKF0004 INVALID ATTEMPT TO ACCESS SYSTEM:  USER:'
./ DELETE  SEQ1=07950060,SEQ2=07960060
WTOMSG5  DC    CL60'RAKF0005 INVALID ATTEMPT TO ACCESS RESOURCE'
WTOMSG7  DC    C'RAKF0007 ACCESS ALLOWED VIA OPERATIONS:  USER:'
./ DELETE  SEQ1=07990060,SEQ2=07990060
WTOMSG8  DC    CL60'RAKF0008 UNDEFINED RESOURCE - ACCESS ALLOWED'
./ DELETE  SEQ1=08020060,SEQ2=08020060
         DC    CL8' ',C','
./ DELETE  SEQ1=08040060,SEQ2=08040060
         DC    CL8' ',C','
./ DELETE  SEQ1=08060060,SEQ2=08060060
         DC    CL8' ',C','
         DC    CL133' '
         DC    C'                                              '
         DC    C'                                              '
         DC    C'                                              '
         DC    C'         0123456789ABCDEF'
./ DELETE  SEQ1=08630060,SEQ2=08640060
         IHAASCB DSECT=YES
         IHAASXB DSECT=YES
./ DELETE  SEQ1=08660071,SEQ2=08670060
         IHAPSA  DSECT=YES
         IKJRB   DSECT=YES
./ DELETE  SEQ1=08710088,SEQ2=08750088
./  CHANGE NAME=IGC0013A
./ DELETE  SEQ1=00020019,SEQ2=00020019
* CPARM='XREF(SHORT),OBJ,NODECK,RENT',LPARM='RENT'            RAKF013A
./ DELETE  SEQ1=00060017,SEQ2=00060017
RAKF013A CSECT
./ DELETE  SEQ1=00230013,SEQ2=00230013
         USING RAKF013A,R6         SVC ENTRY R6 = EP.
./ DELETE  SEQ1=00300013,SEQ2=00360013
./ DELETE  SEQ1=00380013,SEQ2=00380013
         L     R15,PSATOLD-PSA(0)  ADDRESS TCB
./ DELETE  SEQ1=00420013,SEQ2=00430013
./ DELETE  SEQ1=00490013,SEQ2=00510013
./ DELETE  SEQ1=00560013,SEQ2=00610013
./ DELETE  SEQ1=00830013,SEQ2=00840013
         IHAPSA  DSECT=YES
         IKJRB   DSECT=YES
./ DELETE  SEQ1=00860013,SEQ2=00900013
./  CHANGE NAME=IGC0013C
./ DELETE  SEQ1=00020013,SEQ2=00020013
* CPARM='XREF(SHORT),OBJ,NODECK,RENT',LPARM='RENT'            RAKF013C
./ DELETE  SEQ1=00060008,SEQ2=00060008
RAKF013C CSECT
./ DELETE  SEQ1=00230008,SEQ2=00230008
         USING RAKF013C,R6         SVC ENTRY R6 = EP.
         MVC   RACRGM,RACRREAL     move RACROUTE
./ DELETE  SEQ1=00290008,SEQ2=00350008
./ DELETE  SEQ1=00370008,SEQ2=00370008
         L     R15,PSATOLD-PSA(0)  ADDRESS TCB
./ DELETE  SEQ1=00410008,SEQ2=00420008
./ DELETE  SEQ1=00460008,SEQ2=00460008
         MVC   RACRGM+RACRLEN-RACDLEN(RACDLEN-8),0(R10) MOVE PARM
./ DELETE  SEQ1=00490008,SEQ2=00490008
./ DELETE  SEQ1=00510008,SEQ2=00510008
./ DELETE  SEQ1=00560008,SEQ2=00610008
         DC    A(0)       INSTALLATION DATA ADDRESS (missing in RACDEF)
         DC    A(0)       ENTITY NAME ADDR FIELD    (missing in RACDEF)
./ DELETE  SEQ1=00820008,SEQ2=00830008
         IHAPSA  DSECT=YES
         IKJRB   DSECT=YES
./ DELETE  SEQ1=00850008,SEQ2=00880008
./  CHANGE NAME=IGC00130
./ DELETE  SEQ1=00020016,SEQ2=00020016
* CPARM='XREF(SHORT),OBJ,NODECK,RENT',LPARM='RENT'            RAKF0130
./ DELETE  SEQ1=00050015,SEQ2=00070015
./ DELETE  SEQ1=00090010,SEQ2=00090010
RAKF0130 CSECT
./ DELETE  SEQ1=00260010,SEQ2=00260010
         USING RAKF0130,R6         SVC ENTRY R6 = EP.
./ DELETE  SEQ1=00330010,SEQ2=00390010
./ DELETE  SEQ1=00410010,SEQ2=00410010
         L     R15,PSATOLD-PSA(0)  ADDRESS TCB
./ DELETE  SEQ1=00450010,SEQ2=00460010
./ DELETE  SEQ1=00520010,SEQ2=00540010
./ DELETE  SEQ1=00590010,SEQ2=00640010
./ DELETE  SEQ1=00700010,SEQ2=00700010
         USING ACHKLIST,R9         RACHECK parameter list
         TM    ACHKFLG1,ACHKCSA    profile to be returned in CSA?
         BNO   RETURN              no  --> exit
         XR    R1,R1               yes --> return zero address to
*                                          signal unsupported function
RETURN   BR    R8                  RETURN TO ORIG. R14
./ DELETE  SEQ1=00850010,SEQ2=00860010
         IHAPSA  DSECT=YES
         IKJRB   DSECT=YES
./ DELETE  SEQ1=00880010,SEQ2=00910010
         ICHACHKL
./   ENDUP
/*
//* ------------------------------------------------------------------*
//* Rename reused ESG members to their RAKF names                     *
//* ------------------------------------------------------------------*
//RENAME   EXEC PGM=IKJEFT01
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTERM  DD DUMMY
//SYSTSIN  DD *
  RENAME 'MVS.RAKF.ESG2RAKF.SRC(ICHRTX00)' +
         'MVS.RAKF.ESG2RAKF.SRC(ICHSFR00)'
  RENAME 'MVS.RAKF.ESG2RAKF.SRC(CJYRPROF)' +
         'MVS.RAKF.ESG2RAKF.SRC(RAKFPROF)'
  RENAME 'MVS.RAKF.ESG2RAKF.SRC(CJYRUIDS)' +
         'MVS.RAKF.ESG2RAKF.SRC(RAKFUSER)'
/*
//* ------------------------------------------------------------------*
//* Load RAKF unique members ICHSEC00 and ICHRIN00                    *
//* ------------------------------------------------------------------*
//ICHSEC00 EXEC PGM=IEBGENER
//SYSUT2   DD  DISP=SHR,DSN=MVS.RAKF.ESG2RAKF.SRC(ICHSEC00)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
         TITLE 'RAKF Initialization Program'
ICHSEC00 CSECT
*
**********************************************************************
*                                                                    *
* NAME: ICHSEC00                                                     *
*                                                                    *
* TYPE: Assembler Source                                             *
*                                                                    *
* DESC: Initialize RAKF                                              *
*                                                                    *
* FUNCTION: - output banner to console                               *
*           - check if SAFV is already defined and initialized       *
*             o if yes: skip initialization and go directly to       *
*                       profile and user table initialization        *
*           - try to read initialization directive from              *
*             parmlib member RAKFINIT:                               *
*             o if first line of member starts with YES:    continue *
*             o if first line of member starts with NO:     exit     *
*             o else, of if member doesn't exist:                    *
*               + ask operator for permission to initialize          *
*                 if operator denies permission:            exit     *
*           - get SQA storage for SAFV and initialize it             *
*           - put entry address of SAF router ICHSFR00 in SAFV       *
*           - initialize RCVT                                        *
*           - initialize profile table                               *
*           - initialize user table                                  *
*                                                                    *
* REQUIREMENTS: - ICHSFR00 in LPA                                    *
*               - RAKFPROF and RAKFUSER in linklist                  *
*               - parmlib defined through ddname IEFPARM             *
*               - user and profile table DDs as needed               *
*                 by RAKFPROF and RAKFUSER                           *
*                                                                    *
**********************************************************************
*
         PRINT NOGEN
         SAVE  (14,12),,ICHSEC00_&SYSDATE._&SYSTIME
         USING ICHSEC00,R15        establish => program EP
         ST    R13,SAVEAREA+4      save HSA
         LA    R11,SAVEAREA        establish => savearea
         ST    R11,8(R13)          save LSA
         LR    R13,R11             setup => our savearea
         USING SAVEAREA,R13        new addressability
         DROP  R15                 program EP no longer needed
         B     CONTINUE            branch around savearea
SAVEAREA DS    18F                 savearea
*
* identify
*
CONTINUE WTO   'RAKF is based on the ESG Security System'
         WTO   'written by Craig J. Yasuna               (Mar 1991)'
         WTO   'adapted to MVS 3.8J: A. Philip Dickinson (Aug 2005)'
         WTO   '                     Phil Roberts        (Apr 2011)'
         WTO   '                     Juergen Winkelmann  (Apr 2011)'
*
* RAKF already active?
*
         L     R2,FLCCVT-PSA(0)    get CVT address from PSA
         ICM   R3,B'1111',CVTSAF(R2) SAFV already defined?
         BZ    GOFORIT             no RAC active, continue activation
         USING SAFV,R3             addressability of SAFV
         CLC   SAFVIDEN(4),SAFVID  SAFV initialized?
         BNE   GOFORIT             no RAC active, continue activation
         DROP  R3                  SAFV no longer needed
         WTO   'RAKF005I RAKF is already active' tell operator
         B     PROFUSER            initialize user and profile table
*
* read parmlib
*
GOFORIT  LA    R11,PARMLIB         establish ..
         USING IHADCB,R11           .. DCB addressability
         OPEN  PARMLIB             open PARMLIB
         LH    R12,DCBBLKSI        get blocksize
         GETMAIN EU,LV=(R12),A=BLKADDR get storage for block
         FIND  PARMLIB,RAKFINIT,D  find member RAKFINIT
         LTR   R15,R15             parmlib member found?
         BNZ   CLOSE                --> no, don't read
         L     R12,BLKADDR         get block address
         READ  INDECB,SF,PARMLIB,(R12),'S' read block
         CHECK INDECB              wait for data to arrive
         MVC   RAKSTART(4),0(R12)  get parmlib input
CLOSE    LH    R12,DCBBLKSI        get blocksize
         FREEMAIN EU,LV=(R12),A=BLKADDR free storage
         CLOSE PARMLIB             close parmlib
         DROP  R11                 DCB no longer needed
*
* decide initialization
*
         CLC   RAKSTART(2),NO      if RAKFINIT directive is NO ..
         BE    NOINIT               .. talk dirrty and don't initialize
         CLC   RAKSTART(3),YES     if RAKFINIT directive is YES ..
         BE    INITMSG              .. initialize RAKF
         WTO   MF=(E,INITWTO)       .. else ask operator
         WTOR  'RAKF002A Reply YES to continue or NO to cancel',       X
               REPLY,4,SECECB,ROUTCDE=(1) .. shall we?
         WAIT  ECB=SECECB          wait for reply
         CLC   REPLY(2),NO         if operator replied NO ..
         BNE   INIT                 .. talk dirrty and don't initialize
NOINIT   WTO   'RAKF004W RAKF not initialized' tell operator
RETURN   L     R13,SAVEAREA+4      get caller's savearea
         RETURN (14,12),,RC=0      return
*
* initialize
*
INITMSG  WTO   MF=(E,INITWTO)      tell operator
INIT     MODESET MODE=SUP,KEY=ZERO authorize ourselves
         GETMAIN RU,LV=SAFVLEN,SP=245 get SQA storage for SAFV
         LR    R3,R1               establish ..
         USING SAFV,R3              .. addressability of SAFV
         XC    SAFV(SAFVLEN),SAFV  clear SAFV
         MVC   SAFVIDEN(4),SAFVID  move identifier into SAFV
         LOAD  EP=ICHSFR00         get SFR address (LPA)
         ST    R0,SAFVSAFR         store SFR address in SAFV
         DROP  R3                  SAFV addressability no longer needed
         L     R2,FLCCVT-PSA(0)    get CVT address from PSA
         ST    R3,CVTSAF(R2)       save SAFV address in CVT
         L     R15,CJYRCVT         get RCVT loader address
         BALR  R14,R15             call it
         MODESET MODE=PROB,KEY=NZERO return to problem state
         WTO   'RAKF003I RAKF is now active',ROUTCDE=(2) tell operator
PROFUSER LOAD  EP=RAKFPROF         load profile updater
         LR    R15,R0              address of entry point
         BALR  R14,R15             call it
         DELETE EP=RAKFPROF        remove it
         LOAD  EP=RAKFUSER         load user updater
         LR    R15,R0              address of entry point
         BALR  R14,R15             call it
         DELETE EP=RAKFUSER        remove it
         B     RETURN              return
*
* data area
*
BLKADDR  DS    F                   address of parmlib read buffer
CJYRCVT  DC    V(CJYRCVT)          RCVT loader
RAKFINIT DC    C'RAKFINIT'         parmlib member name
RAKSTART DC    CL4' '              parameter read from parmlib
REPLY    DC    CL4' '              reply from operator
SAFVID   DC    CL4'SAFV'           SAFV eye catcher
SECECB   DC    A(0)                ECB for WTOR
NO       DC    CL2'NO'             NO
YES      DC    CL3'YES'            YES
INITWTO  WTO   'RAKF001I RAKF is now being activated',                 X
               ROUTCDE=(1),MF=L    tell operator
PARMLIB  DCB   DDNAME=IEFPARM,DSORG=PO,MACRF=R,EODAD=CLOSE
*
* equates
*
CVTSAF   EQU   248 CVTSAF doesn't exist but is a reserved field in 3.8J
         YREGS                     register equates
*
* control block mappings
*
         CVT   DSECT=YES           map CVT
         IHAPSA   DSECT=YES        map PSA
         ICHSAFV  DSECT=YES        map SAFV
         DCBD  DSORG=PO,DEVD=DA    map DCB
         END   ICHSEC00
/*
//ICHRIN00 EXEC PGM=IEBGENER
//SYSUT2   DD  DISP=SHR,DSN=MVS.RAKF.ESG2RAKF.SRC(ICHRIN00)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
         TITLE 'RAKF SVCs'
ICHRIN00 CSECT
         ENTRY IGC0013A,IGC0013B,IGC0013C
*
**********************************************************************
*                                                                    *
* NAME: ICHRIN00                                                     *
*                                                                    *
* TYPE: Assembler Source                                             *
*                                                                    *
* DESC: Stub module for RAKF SVCs                                    *
*                                                                    *
* FUNCTION: provide dummy RACF SVC 132                               *
*           provide real RAKF SVCs 130, 131, 133                     *
*                                                                    *
**********************************************************************
*
         USING ICHRIN00,R6         SCV entry R6 = EP
         B     SVC130              continue with IGC00130
         DC    C'IGC00130 RAKF  &SYSDATE. ' eye catcher
SVC130   L     R6,RAKF0130         address of SVC 130
         BR    R6                  go for it
*
         USING IGC0013A,R6         SCV entry R6 = EP
IGC0013A B     SVC131              continue with IGC0013A
         DC    C'IGC0013A RAKF  &SYSDATE. ' eye catcher
SVC131   L     R6,RAKF013A         address of SVC 131
         BR    R6                  go for it
*
         USING IGC0013B,R6         SCV entry R6 = EP
IGC0013B B     SVC132              continue with IGC0013B (dummy)
         DC    C'ICHRIN00 DUMMY &SYSDATE. ' eye catcher
SVC132   LA    R15,0               indicate RACLIST successful ..
         LA    R0,4                 .. but no profiles mapped
         BR    R14                 return to the caller
*
         USING IGC0013C,R6         SCV entry R6 = EP
IGC0013C B     SVC133              continue with IGC0013C
         DC    C'IGC0013C RAKF  &SYSDATE. ' eye catcher
SVC133   L     R6,RAKF013C         address of SVC 133
         BR    R6                  go for it
*
*
RAKF0130 DC    V(RAKF0130)         SVC 130 (RACHECK)
RAKF013A DC    V(RAKF013A)         SVC 131 (RACINIT)
RAKF013C DC    V(RAKF013C)         SVC 133 (RACDEF)
         YREGS                     register equates
         END   ICHRIN00
/*
//* ------------------------------------------------------------------*
//* Update member statistics for documentation                        *
//* ------------------------------------------------------------------*
//STATUPD EXEC PGM=IKJEFT01
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  *
PDS 'MVS.RAKF.ESG2RAKF.SRC'
MEMBERS  (ICHSFR00,IGC0013A,IGC0013C,                  +
          IGC00130,RAKFPROF,RAKFUSER)
ATTRIB * VER(38) MOD(02) ID(*RAKF*) MODIFIED(11/03/31) +
         TIME(2045) SECS(00)
MEMBERS  (ICHRIN00,ICHSEC00)
ATTRIB * NONE
ATTRIB * ADDSTATS
ATTRIB * VER(38) MOD(02) ID(*RAKF*) MODIFIED(11/03/31) +
         TIME(2045) SECS(00) CREATED(11/03/31)
MEMBERS  (CJYRCVT)
ATTRIB * VER(38) MOD(00) ID(*PHILS*) MODIFIED(05/08/23) +
         TIME(0000) SECS(00)
END
/*
//
